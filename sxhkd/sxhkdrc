!/bin/bash

# Help
super + question
	awk '/^[a-z]/ && last \{print $0,"\t",last\} \{last=""\} /^#/\{last=$0\}' ~/.config/sxhkd/sxhkdrc \
    | column -t -s $'\t' | rofi --config ~/.config/rofi/custom/menu.rasi -dmenu
    # | column -t -s $'\t' | bash ~/.config/rofi/launchers/type-6/launcher.sh -dmenu

# terminal / ranger
super + {_, shift} + Return
  EDITOR=neovide {warp-terminal, alacritty -e ranger}

# launcher / power menu
ctrl + {_, shift} + space 
  {~/.config/rofi/custom/menu.sh drun, ~/.config/rofi/powermenu/type-4/powermenu.sh}
  # bash {~/.config/rofi/launchers/type-6/launcher.sh, ~/.config/rofi/powermenu/type-5/powermenu.sh}

clear notifications
alt + {d, D}
  {killall dunst, dunst &}

# View clipboard
super + c
  ~/.config/rofi/custom/menu.sh clipboard

# clear clipboard
super + shift + c
  pkill greenclip && greenclip clear && greenclip daemon

# kill
super + q
  bspc node -c

# workspaces
super + {1-5}
  bspc desktop -f '^{1-5}'

# shift to workspace left/right
super + {a, d}
  bspc desktop --focus -f {prev, next}


super + {r, W}
  {staticpad 0, bspc node --to-desktop 0 --focus -f 0}

# Switch to obsidian
super + o
  staticpad 8
  # bspc desktop --focus 8

# Switch to youtube-music
super + y
  staticpad 9

# reload bspwm
super + shift + r
  bspc wm -r

# focus change
super + {h,j,k,l}
  bspc node -f {west, south, north, east}

# shift window
super + shift + {h,j,k,l}
  bspc node -f -s {west, south, north, east}

# shift to different workspace
super + shift + {1-5}
  bspc node --to-desktop '^{1-5}' --focus -f '^{1-5}'

# shift to adjacent workspace
super + shift + {a, d}
  bspc node --to-desktop {prev, next} --focus -f {prev, next}

# scratchpad
super + w
  scratchpad
  # scratchpad-tiles toggle
# Toggle focused to scratchpad


# floating
super + space
  if [ -z "$(bspc query -N -n focused.floating)" ]; then \
      bspc node focused -t floating; \
  else \
      bspc node focused -t tiled; \
  fi

# floating
super + s
  if [ -z "$(bspc query -N -n focused.sticky)" ]; then \
      bspc node focused -g sticky=on; \
  else \
      bspc node focused -g sticky=off; \
      bspc node focused --layer normal; \
  fi
 
# fullscreen
super + f
  if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
      bspc node focused -t fullscreen; \
      polybar-msg cmd hide; \
  else \
      bspc node focused -t tiled; \
      polybar-msg cmd show; \
  fi

# [next, prev] window
super + {_, shift} + Tab
  bspc node -f {next, prev}.!sticky

# screenshot
Print
  screenshot

# OCR
alt + o
  ocr

# open browser
super + {b, B, slash}
  {zen-browser, zen-browser --private-window, alacritty -e lynx}
  # {floorp, floorp --private-window, alacritty -e lynx}
  # {firefox, firefox --private-window, alacritty -e lynx}
  # {vivaldi, vivaldi --incognito, alacritty -e lynx}

# Mute
XF86AudioMute
  pactl set-sink-mute @DEFAULT_SINK@ toggle

# Decrease/Increase Volume
{XF86AudioLowerVolume, XF86AudioRaiseVolume}
  pactl set-sink-volume @DEFAULT_SINK@ {-5, +5}% && dunstify -t 1000 "Volume" `pactl get-sink-volume @DEFAULT_SINK@ | cut -d ' ' -f 6`

# Decrease/Increase Brightness
{XF86MonBrightnessDown, XF86MonBrightnessUp}
  light {-U,-A} 10

# Smart expand
super + alt + {Left,Down,Up,Right}
  n=10; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Smart shrink
super + alt + shift + {Left,Down,Up,Right}
  n=10; \
  { d1=right;   d2=left;  dx=-$n; dy=0;   \
  , d1=top; d2=bottom;    dx=0;   dy=$n;  \
  , d1=bottom;    d2=top; dx=0;   dy=-$n; \
  , d1=left;  d2=right;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Smart expand
super + alt + {h,j,k,l}
  n=10; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Smart shrink
super + alt + shift + {h,j,k,l}
  n=10; \
  { d1=right;   d2=left;  dx=-$n; dy=0;   \
  , d1=top; d2=bottom;    dx=0;   dy=$n;  \
  , d1=bottom;    d2=top; dx=0;   dy=-$n; \
  , d1=left;  d2=right;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Bluetooth
alt + b
  rofi-bluetooth

# iwgtk
alt + w
  iwgtk
  # rofi-wifi

# Switch theme
alt + t
  switch-theme

# Emoji picker
alt + e 
  rofi -show emoji -modi emoji -theme ~/.config/rofi/custom/menu.rasi

# Calculator
XF86Calculator
  rofi -show calc -modi calc -no-show-match -no-sort -theme ~/.config/rofi/custom/menu.rasi

# Music player
super + m 
  alacritty --title Music -e ncmpcpp

# next song
alt + Right
  playerctl next

# previous song
alt + Left
  playerctl previous

# play-pause
alt + space
  playerctl play-pause

# play-pause
XF86AudioPause
  playerctl play-pause

# play-pause
XF86AudioPlay
  playerctl play-pause

{XF86AudioMute,XF86AudioMicMute,ctrl + m}
	pactl set-source-mute alsa_input.pci-0000_04_00.6.HiFi__hw_acp__source toggle && dunstify -t 500 -u low -r '92813' "Mic $(pactl get-source-mute alsa_input.pci-0000_04_00.6.HiFi__hw_acp__source)"

# Color Picker
alt + c
  colorpicker --short --one-shot | xsel --clipboard

# Copy Paste type
ctrl + shift + 2
  sleep 1; xdotool type --delay 10 "$(xclip -o -selection clipboard | sed 's/^[\t]*//')"
